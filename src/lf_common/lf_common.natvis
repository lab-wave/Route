<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="QVariant">
		<Intrinsic Name="typeId" Expression="*(int*)(&amp;((const QtPrivate::QMetaTypeInterface *)(d.packedType &lt;&lt; 2))->typeId)">
		</Intrinsic>
		<Intrinsic Name="dataStar" Expression="(&amp;(d.data.data))">
		</Intrinsic>
		<Intrinsic Name="sharedDataStar" Expression="(d.is_shared ? reinterpret_cast&lt;const void *&gt;((size_t)(d.data.shared) + d.data.shared-&gt;offset) : (&amp;(d.data.data)))">
		</Intrinsic>


		<!-- Static core pointers -->
		<DisplayString Condition="typeId() == QMetaType::QObjectStar">QObject*</DisplayString>

		<!-- Static core template classes -->
		<DisplayString Condition="typeId() == QMetaType::QVariantMap">{*(QMap&lt;QString,QVariant&gt;*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QVariantList">{*(QList&lt;QVariant&gt;*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QVariantHash">{*(QHash&lt;QString,QVariant&gt;*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QVariantPair">QVariantPair</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QByteArrayList">{*(QList&lt;QByteArray&gt;*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QStringList">{*(QList&lt;QString&gt;*) sharedDataStar()}</DisplayString>

		<!-- Static primitives-->
		<DisplayString Condition="typeId() == QMetaType::Bool">[Bool] {*(bool*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Int">[Int] {*(int*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::UInt">[UInt] {*(unsigned int*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::LongLong">[LongLong] {*(long long*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::ULongLong">[ULongLong] {*(unsigned long long*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Double">[Double] {*(double*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::VoidStar">[VoidStar] {*(void**) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Long">[Long] {*(long*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Short">[Short] {*(short*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Char">[Char] {*(char*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Char16">[Char16] {*(char16_t*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Char32">[Char32] {*(char32_t*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::ULong">[ULong] {*(unsigned long*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::UShort">[UShort] {*(unsigned short*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::UChar">[UChar] {*(unsigned char*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::Float">[Float] {*(float*) dataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::SChar">[SChar] {*(signed char*) dataStar()}</DisplayString>

		<!-- Static core classes -->
		<DisplayString Condition="typeId() == QMetaType::QChar">[QChar] {*(QChar*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QString">[QString] {*(QString*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QByteArray">[QByteArray] {*(QByteArray*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QDate">[QDate] {*(QDate*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QTime">[QTime] {*(QTime*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QDateTime">[QDateTime]</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QUrl">[QUrl]</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QLocale">[QLocale]</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QRect">[QRect] {*(QRect*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QRectF">[QRectF] {*(QRectF*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QSize">[QSize] {*(QSize*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QSizeF">[QSizeF] {*(QSizeF*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QLine">[QLine] {*(QLine*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QLineF">[QLineF] {*(QLineF*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPoint">[QPoint] {*(QPoint*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPointF">[QPointF] {*(QPointF*) sharedDataStar()}</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QEasingCurve">[EasingCurve]</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QUuid">[Uuid]</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QRegularExpression">[RegularExpression]</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QJsonValue">QJsonValue</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QJsonObject">QJsonObject</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QJsonArray">QJsonArray</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QJsonDocument">QJsonDocument</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QCborValue">QCborValue</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QCborArray">QCborArray</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QCborMap">QCborMap</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QModelIndex">ModelIndex</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPersistentModelIndex">QPersistentModelIndex</DisplayString>

		<!-- Static gui classes -->
		<DisplayString Condition="typeId() == QMetaType::QFont">QFont</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPixmap">QPixmap</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QBrush">QBrush</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QColor">[QColor]</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPalette">QPalette</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QIcon">QIcon</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QImage">QImage</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPolygon">QPolygon</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QRegion">QRegion</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QBitmap">QBitmap</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QCursor">QCursor</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QKeySequence">QKeySequence</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPen">QPen</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QTextLength">QTextLength</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QTextFormat">QTextFormat</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QTransform">QTransform</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QMatrix4x4">QMatrix4x4</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QVector2D">QVector2D</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QVector3D">QVector3D</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QVector4D">QVector4D</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QQuaternion">QQuaternion</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QPolygonF">QPolygonF</DisplayString>
		<DisplayString Condition="typeId() == QMetaType::QColorSpace">QColorSpace</DisplayString>

		<!-- Static widget classes -->
		<DisplayString Condition="typeId() == QMetaType::QSizePolicy">QSizePolicy</DisplayString>

		<!-- Unhandled : display the typeId-->
		<DisplayString>QMetaType::Type ({typeId()})</DisplayString>

		<Expand>
			<ExpandedItem Condition="typeId() == QMetaType::QString">*(QString*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QByteArray">*(QByteArray*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QDate">*(QDate*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QTime">*(QTime*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QRect">*(QRect*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QRectF">*(QRectF*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QSize">*(QSize*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QSizeF">*(QSizeF*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QLine">*(QLine*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QLineF">*(QLineF*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QPoint">*(QPoint*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QPointF">*(QPointF*) sharedDataStar()</ExpandedItem>

			<ExpandedItem Condition="typeId() == QMetaType::QVariantMap">*(QMap&lt;QString,QVariant&gt;*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QVariantList">*(QList&lt;QVariant&gt;*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QVariantHash">*(QHash&lt;QString,QVariant&gt;*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QByteArrayList">*(QList&lt;QByteArray&gt;*) sharedDataStar()</ExpandedItem>
			<ExpandedItem Condition="typeId() == QMetaType::QStringList">*(QList&lt;QString&gt;*) sharedDataStar()</ExpandedItem>
		</Expand>
	</Type>
	
	<Type Name="lf::CProperty">
		<DisplayString>[{m_id} - {m_name}] [Default] = {*(QVariant*)this,nd} </DisplayString>
	</Type>

	<Type Name="CAttribute">
		<DisplayString>{*(lf::CProperty*)this,nd}</DisplayString>
	</Type>

	<Type Name="lf::Edge">
		<DisplayString>{m_from} -> {m_to}, [Value]: {m_val, g}</DisplayString>
		<Expand>
			<Item Name="[From]">m_from</Item>
			<Item Name="[To]">m_to</Item>
			<Item Name="[Value]">m_val</Item>
			<Item Name="[Props]">m_props</Item>
		</Expand>
	</Type>

	<Type Name="lf::Vertex">
		<DisplayString>[{m_id}] </DisplayString>
		<Expand>
			<Item Name="[Id]">m_id</Item>
			<Item Name="[Input]">m_inputList</Item>
			<Item Name="[Output]">m_outputList</Item>
			<Item Name="[Props]">m_props</Item>
		</Expand>
		<!-- [Input] = {m_inputList}, [Output] = {m_outputList} -->
	</Type>

</AutoVisualizer>
